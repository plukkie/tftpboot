default-lease-time 600;
max-lease-time 7200;
ddns-update-style none;
authoritative;

option domain-name-servers 8.8.8.8, 8.8.4.4;
option ztd-provision-url code 240 = text; ##OS10
option ztp_json_url code 67 = text; ##SONiC
option idrac-ztp-string code 43 = text;

#################################################
# Below lines define the ONIE VIVSO structure
# This info is send by ONIE in the DHCP request
# https://opencomputeproject.github.io/onie/design-spec/discovery.html
#
# Create an option namespace called ONIE
option space onie code width 1 length width 1;

# Define the code names and data types within the ONIE namespace
option onie.installer_url code 1 = text;
option onie.updater_url   code 2 = text;
option onie.machine       code 3 = text;
option onie.arch          code 4 = text;
option onie.machine_rev   code 5 = text;

# Package the ONIE namespace into option 125
option space vivso code width 4 length width 1;
option vivso.onie code 42623 = encapsulate onie;
option vivso.iana code 0 = string;
option op125 code 125 = encapsulate vivso;
#################################################


class "onie-vendor-classes" {

  ## This class captures requests coming from ONIE bootstrapping
  ## It will present an image to be used per Dell hardware type

  ## Limit the matching to a request we know originated from ONIE
  match if substring(option vendor-class-identifier, 0, 11) = "onie_vendor";

  ## Required to use VIVSO
  option vivso.iana 01:01:01;

  ## N3248TE [iRack Management switch]
  if option onie.machine = "dellemc_n3248te_c3338" {
    option onie.installer_url = "http://10.10.10.201/tftpboot/DES4.0.1_ONIE_STAGING.bin";
  }

  ## S5448 [iRack Leaf switch]
  if option onie.machine = "dellemc_s5448f_c3758" {
    option onie.installer_url = "http://10.10.10.201/tftpboot/DES4.0.1_ONIE_STAGING.bin";
  }
}

class "idrac-vendor-classes" {
  
  # Poweredge iDrac ZTP
  if option vendor-class-identifier = "iDRAC" {
    set vendor-string = option vendor-class-identifier;
    # NFS share example: -f system_config.xml -i 192.168.0.130 -n /nfs -s 0 -d 0 -t 500
    option idrac-ztp-string "-f system_config.xml -i 192.168.0.130 -u user -p password -n cifs -s 2 -d 0 -t 500";
  }

}

#class "sonic-switches-gns3-generic" {

  ## This matches on option 12 'host-name'
  ## If a ZTP stage GNS3 SONiC VM sends a DHCP discover message,
  ## it sets the host-name to "sonic"

#  match option host-name;
#}


## Match on option 12 host-name set to "sonic"
#subclass "sonic-switches-gns3-generic" "sonic-ADDED_CAPITAL_STRING_FOR_TESTING"  {
#  option ztp_json_url "http://10.10.10.201/tftpboot/sonic/ztp/ztp_gns3_generic.json";
#}

## Match on option 61 dhcp-client-identifier
####################################################################################
## SONiC sends STAG number as part of option 61
## SONiC v4.1
## - Client Identifier is 18 bytes total of which STAG 6 bytes
## - SONiC sets string : SONiC##N.A##<STAG> coded in HEX
## - Dell SONiC GNS3 sets STAG to 000000 [HEX 30:30:30:30:30:30]
## - Full HEX string would be 53:4f:4e:69:43:23:23:4e:2e:41:23:23:30:30:30:30:30:30
## SONiC v4.2
## - Client Identifier is 52 bytes total of which STAG 6 bytes
## - String : "SONiC##SONiC##<serial>##<mac address>
## - I.e SONiC sets string : SONiC##SONiC##0000000000000000000##0c:60:91:b6:00:0a
## - Dell SONiC GNS3 sets STAG to 000000 [HEX 30:30:30:30:30:30]
## - Full HEX string would be:
## - 53 4f 4e 69 43 23 23 53 4f 4e 69 43 23 23 "SONiC##SONiC##"
##   30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 23 23 "0000000000000000000##"
##   30 63 3a 36 30 3a 39 31 3a 62 36 3a 30 30 3a 30 61 "0c:60:91:b6:00:0a"
##
####################################################################################

class "sonic_4.1_STAG_capture" {

  ## This matches on option 61 'dhcp-client-identifier'
  ## Match on SONiC4.1 string syntax
  
  match if substring(option dhcp-client-identifier, 0, 12) = "SONiC##N.A##";
  option ztp_json_url "http://10.10.10.201/tftpboot/sonic/ztp/ztp_gns3_generic.json";
}

## Match on specific STAG SONiC4.1 syntax
## EXAMPLE: match on specific STAG number 123456
#subclass "sonic_4.1_STAG_capture" "SONiC##N.A##123456" {
	 ## Put here options for specific match
	 
#}


class "sonic_4.2_STAG_capture" {

  ## This matches on option 61 'dhcp-client-identifier'
  ## Match on SONiC4.2 string syntax
  
  match if substring(option dhcp-client-identifier, 0, 14) = "SONiC##SONiC##";
  option ztp_json_url "http://10.10.10.201/tftpboot/sonic/ztp/ztp_gns3_generic.json";
}

## Match on specific STAG SONiC4.2 syntax
## EXAMPLE: match on specific STAG number 123456
#subclass "sonic_4.2_STAG_capture" "SONiC##SONiC##0000000000000123456" {
	## Put here options for specific match
#}
  
subnet 10.10.10.0 netmask 255.255.255.0 {
	range 10.10.10.151 10.10.10.180;
	pool {
		#allow members of "sonic-switches-gns3-generic";
		allow members of "sonic_4.1_STAG_capture";
		allow members of "sonic_4.2_STAG_capture";
		range 10.10.10.181 10.10.10.200;
	}
}

## SONiC Fabric Nodes 
group {
	## This option is used for ZTP staging when the MAC address is matched of the DHCP discovery
	option ztp_json_url "http://10.10.10.201/tftpboot/sonic/ztp/ztp_gns3_cicd_fabric.json";

	host SONiC-SPINE01 {
		## Example to catch DHCP-REQUESTS with dhcp-client-identifier set
		## This ensures a fixed IP is used for switches with a Dell STAG
		## After ZTP staging has finished
		option dhcp-client-identifier "STAG-123456";
		## Match on specific mac address
		hardware ethernet cc:bb:aa:21:00:01;
		fixed-address 10.10.10.21;
	}
	host SONiC-SPINE02 {
		hardware ethernet cc:bb:aa:22:00:01;
		fixed-address 10.10.10.22;
	}
	host SONiC-SPINE03 {
		hardware ethernet cc:bb:aa:23:00:01;
		fixed-address 10.10.10.23;
	}
	host SONiC-SPINE04 {
		hardware ethernet cc:bb:aa:24:00:01;
		fixed-address 10.10.10.24;
	}
	host SONiC-LEAF01 {
		hardware ethernet cc:bb:aa:11:00:01;
		fixed-address 10.10.10.11;
	}
	host SONiC-LEAF02 {
		hardware ethernet cc:bb:aa:12:00:01;
		fixed-address 10.10.10.12;
	}
	host SONiC-LEAF03 {
		hardware ethernet cc:bb:aa:13:00:01;
		fixed-address 10.10.10.13;
	}
	host SONiC-LEAF04 {
		hardware ethernet cc:bb:aa:14:00:01;
		fixed-address 10.10.10.14;
	}
}

## SONiC Fabric Endpoint Nodes 
group {
	option ztp_json_url "http://10.10.10.201/tftpboot/sonic/ztp/ztp_gns3_cicd_fabric_endpoints.json";

	host SONiC-BORDER1 {
		hardware ethernet cc:bb:aa:31:00:01;
		fixed-address 10.10.10.31;
		option host-name "SONiC-BORDER1";
	}
	host SONiC-BORDER2 {
		hardware ethernet cc:bb:aa:32:00:01;
		fixed-address 10.10.10.32;
		option host-name "SONiC-BORDER2";
	}
	host SONiC-HOST1 {
		hardware ethernet cc:bb:aa:41:00:01;
		fixed-address 10.10.10.41;
		option host-name "SONiC-HOST1";
	}
	host SONiC-HOST2 {
		hardware ethernet cc:bb:aa:42:00:01;
		fixed-address 10.10.10.42;
		option host-name "SONiC-HOST2";
	}
}

## OS10 Fabric Nodes 
group {
	option ztd-provision-url "http://10.10.10.201/tftpboot/os10/ztd/ztd_gns3_dev_fabric.sh";

	host OS10-SPINE01 {
		hardware ethernet aa:bb:cc:21:00:01;
		fixed-address 10.10.10.121;
	}
	host OS10-SPINE02 {
		hardware ethernet aa:bb:cc:22:00:01;
		fixed-address 10.10.10.122;
	}
	host OS10-LEAF01 {
		hardware ethernet aa:bb:cc:11:00:01;
		fixed-address 10.10.10.111;
	}
	host OS10-LEAF02 {
		hardware ethernet aa:bb:cc:12:00:01;
		fixed-address 10.10.10.112;
	}
	host OS10-LEAF03 {
		hardware ethernet aa:bb:cc:13:00:01;
		fixed-address 10.10.10.113;
	}
	host OS10-LEAF04 {
		hardware ethernet aa:bb:cc:14:00:01;
		fixed-address 10.10.10.114;
	}
}
